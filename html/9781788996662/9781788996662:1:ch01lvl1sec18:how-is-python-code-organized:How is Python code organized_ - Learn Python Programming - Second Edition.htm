<!DOCTYPE html>
<html class="ng-scope" lang="en" ng-app="PacktUnlimited" ng-strict-di=""><head class="ng-scope" ng-controller="metadataController as metadataController"><meta content="text/html; charset=utf-8" http-equiv="Content-Type"/><style class="vjs-styles-defaults">
      .video-js {
        width: 300px;
        height: 150px;
      }

      .vjs-fluid {
        padding-top: 56.25%
      }
    </style><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>
<title class="ng-binding" ng-bind-html="metadataController.pageTitle">How is Python code organized? - Learn Python Programming - Second Edition</title>
<link href="https://d3ginfw2u4xn7p.cloudfront.net/c825bf9a03a944639d91ecb1f0010fc4/images/favicon.ico" rel="shortcut icon" type="image/x-icon"/>
<meta content="CGEyu7dKgqkqBrxdainq9bY0WowOCMOdZ1nKVzzvYJg" name="google-site-verification"/>
<meta content="index,follow" name="robots"/>
<link href="https://fonts.googleapis.com/" rel="dns-prefetch"/>
<link href="https://maxcdn.bootstrapcdn.com/" rel="dns-prefetch"/>
<link href="https://cdn.polyfill.io/" rel="dns-prefetch"/>
<meta content="!" name="fragment"/>
<link href="https://subscription.packtpub.com/book/application_development/9781788996662/1/ch01lvl1sec18/how-is-python-code-organized" ng-href="https://subscription.packtpub.com/book/application_development/9781788996662/1/ch01lvl1sec18/how-is-python-code-organized" rel="canonical"/>
<meta content="Let's talk a little bit about how Python code is organized." name="description"/>
<meta content="#212121" name="theme-color"/>
<meta class="ng-scope" content="book" ng-if="metadataController.productType" property="og:type"/>
<meta content="How is Python code organized? - Learn Python Programming - Second Edition" property="og:title"/>
<meta content="Let's talk a little bit about how Python code is organized." property="og:description"/>
<meta content="https://subscription.packtpub.com/book/application_development/9781788996662/1/ch01lvl1sec18/how-is-python-code-organized" property="og:url"/>
<meta content="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" property="og:image"/>
<meta content="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" property="og:image:secure_url"/>
<link href="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" ng-href="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" rel="image_src"/>
<meta class="ng-scope" content="Fabrizio Romano" name="book:author" ng-if="metadataController.productType &amp;&amp; metadataController.authorListString"/>
<meta class="ng-scope" content="9781788996662" name="book:isbn" ng-if="metadataController.productType &amp;&amp; metadataController.isbn"/>
<meta class="ng-scope" content="2018-06-29T06:10:00.000Z" name="book:release_date" ng-if="metadataController.productType &amp;&amp; metadataController.releaseDate"/>
<meta class="ng-scope" content="https://packtpub.com/" name="book:publisher" ng-if="metadataController.productType"/>
<meta content="How is Python code organized? - Learn Python Programming - Second Edition" name="twitter:title"/>
<meta content="Let's talk a little bit about how Python code is organized." name="twitter:description"/>
<meta content="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" name="twitter:image"/>
<meta content="summary" name="twitter:card"/>
<meta content="@packtpub" name="twitter:site"/>
<meta content="@packtpub" name="twitter:creator"/>
<meta content="width=device-width, initial-scale=1" name="viewport"/>
<base href="."/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-57x57.png" rel="apple-touch-icon" sizes="57x57"/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-72x72.png" rel="apple-touch-icon" sizes="72x72"/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-114x114.png" rel="apple-touch-icon" sizes="114x114"/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-144x144.png" rel="apple-touch-icon" sizes="144x144"/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-180x180.png" rel="apple-touch-icon" sizes="180x180"/>
<link crossorigin="anonymous" href="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/font-awesome.min.css" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" rel="stylesheet"/>
<link href="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/css" rel="stylesheet" type="text/css"/>
<script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/script.js"></script><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/f.txt" type="text/javascript"></script><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/profitwell.js"></script><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/inferredEvents.js"></script><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/445429252334850"></script><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/fbevents.js"></script><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/f.txt" type="text/javascript"></script><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/uwt.js" type="text/javascript"></script><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/analytics.js" type="text/javascript"></script><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/e8mdsr07" type="text/javascript"></script><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/heap-34805961.js" type="text/javascript"></script><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/hotjar-982604.js" type="text/javascript"></script><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/recaptcha__pl.js" type="text/javascript"></script><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/gtm.js"></script><script src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/polyfill.min.js"></script>
<script async="" defer="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/api.js"></script>
<script async="" defer="" ng-src="https://static.zuora.com/Resources/libs/hosted/1.3.0/zuora-min.js" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/zuora-min.js"></script>
<script>
            //Set your APP_ID
            var APP_ID = 'e8mdsr07'; // to come from wpConfig

            (function(){var w=window;var ic=w.Intercom;if(typeof ic==="function"){ic('reattach_activator');ic('update',w.intercomSettings);}else{var d=document;var i=function(){i.c(arguments);};i.q=[];i.c=function(args){i.q.push(args);};w.Intercom=i;var l=function(){var s=d.createElement('script');s.type='text/javascript';s.async=true;s.src='https://widget.intercom.io/widget/' + APP_ID;var x=d.getElementsByTagName('script')[0];x.parentNode.insertBefore(s,x);};if(w.attachEvent){w.attachEvent('onload',l);}else{w.addEventListener('load',l,false);}}})();

        </script>
<script async="" charset="utf-8" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/modules.bb88fc9b50ded24ae044.js"></script><style id="mm_style_mm_cdApiStyleId_1" media="screen" type="text/css"></style><style type="text/css">iframe#_hjRemoteVarsFrame {display: none !important; width: 1px !important; height: 1px !important; opacity: 0 !important; pointer-events: none !important;}</style><script async="" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/hotjar-982604(1).js"></script><style></style><script src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/f(1).txt"></script><script src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/f(2).txt"></script><script id="schema" type="application/ld+json">{
	"@context": "https://schema.org",
	"@type": "book",
	"author": [
		"Fabrizio Romano"
	],
	"datePublished": "2018-06-29T06:10:00.000Z",
	"image": "https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png",
	"name": "How is Python code organized? - Learn Python Programming - Second Edition",
	"publisher": {
		"@type": "Organization",
		"name": "Packt",
		"logo": {
			"@type": "ImageObject",
			"url": "https://d3ginfw2u4xn7p.cloudfront.net/c825bf9a03a944639d91ecb1f0010fc4/images/white-packt.png"
		}
	},
	"isPartOf": "/book/application_development/9781788996662",
	"description": "Let's talk a little bit about how Python code is organized.",
	"isbn": "9781788996662",
	"bookFormat": "https://schema.org/EBook"
}</script></head><body class="prototype-nav home-body" ng-class="{
    'cover-background': currentPage === 'login' ||
        currentPage === 'create-account' ||
        currentPage === 'password-reset',
    'checkout': currentPage === 'checkout',
    'has-footer': currentPage !== 'login' &amp;&amp;
        currentPage !== 'create-account' &amp;&amp;
        currentPage !== 'password-reset' &amp;&amp;
        currentPage !== 'product',
    'has-bottom-pagination': currentPage === 'saved' ||
        currentPage === 'bookmarks' ||
        currentPage === 'purchases' ||
        currentPage === 'history',
    
    'sidebar-open': showSideBarOverlay,
    'home-body': currentPage != 'create-account' || !freeWeekend,
    'free-weekend': currentPage === 'create-account' &amp;&amp; freeWeekend,
     }"><prerender-ready class="ng-isolate-scope">
<script>
    window.prerenderReady = false;
</script>
</prerender-ready>
<script>
                window.dataLayer = window.dataLayer || [];
                (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
                new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
                j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
                'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
                })(window,document,'script','dataLayer','GTM-WJMM825');
            </script>
<script src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/mmapi.js" type="text/javascript"></script><script id="" type="text/javascript">window.dataLayer=window.dataLayer||[];window.dataLayer.push({originalLocation:document.location.protocol+"//"+document.location.hostname+document.location.pathname+document.location.search});</script><script id="" type="text/javascript">Element.prototype.matches||(Element.prototype.matches=Element.prototype.matchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector||Element.prototype.oMatchesSelector||Element.prototype.webkitMatchesSelector||function(a){a=(this.document||this.ownerDocument).querySelectorAll(a);for(var b=a.length;0<=--b&&a.item(b)!==this;);return-1<b});</script>
<script id="" type="text/javascript">hj("tagRecording",[google_tag_manager["GTM-WJMM825"].macro(4)]);</script><script id="mmpack.0" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/mmpackage-1.12.js" type="text/javascript"></script>

<script src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/cookieconsent.min.js" type="text/javascript"></script>

<link href="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/app.104d50d2c3a3114104d18ba8a565ba3d.bundle.css" rel="stylesheet"/>


<sidebar-overlay class="ng-isolate-scope" show="showSideBarOverlay"></sidebar-overlay>
<div class="page">
<div class="alertbox" id="alertbox"></div>
<div autoscroll="true" class="ng-scope" ng-view="" style="height:100%;">




<div class="book-page-wrapper ng-scope">
<div class="container book-page">

<div class="clearfix"></div>



<div class="container-fluid" id="book-wrapper">
<div class="ng-scope" ng-include="productController.contentView" onload="productController.onFinishLoadContent()"><div class="col-sm-12 ng-scope reader-container" id="reader-content" ng-class="{'reader-container': productController.productType === 'book'}" ng-show="productController.isContentAvailable" on-finish-page-render="productController.applyFontSize()">
<div class="row">
<div class="book-content" style="position:relative;">
<div class="ng-binding" ng-bind-html="productController.content"><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="ch01lvl1sec18"></a>How is Python code organized?</h2></div></div><hr/></div><p>Let's talk a little bit about how Python code is organized. In this section, we'll start going down the rabbit hole a little bit more and introduce more technical names and concepts.</p><p>Starting with the basics, how is <span>Python</span><a class="indexterm" id="id326640294"></a> code organized? Of course, you write your code into files. When you save a file with the extension <code class="literal">.py</code>, that file is said to be a Python module.</p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title"><a id="tip10"></a>Note</h3><p>If you're on Windows or macOS that typically hide file extensions from the user, please make sure you change the configuration so that you can see the complete names of the files. This is not strictly a requirement, but a suggestion.</p></div><p>It would be impractical to save all the code that it is required for software to work within one single file. That solution works for scripts, which are usually not longer than a few hundred lines (and often they are quite shorter than that).</p><p>A complete Python application can be made of hundreds of thousands of lines of code, so you will have to scatter it through different modules, which is better, but not nearly good enough. It turns out that even like this, it would still be impractical to work with the code. So Python gives you <span>another</span><a class="indexterm" id="id326640273"></a> structure, called <span class="strong"><strong>package</strong></span>, which allows you to group modules together. A package is nothing more than a folder, which must contain a special file, <code class="literal">__init__.py</code>, that doesn't need to hold any code but whose presence is required to tell Python that the folder is not just some folder, but it's actually a package (note that as of Python 3.3, the <code class="literal">__init__.py</code> module is not strictly required any more).</p><p>As always, an example will make all of this <span>much</span><a class="indexterm" id="id326640246"></a> clearer. I have created an example structure in my book project, and when I type in my console:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="0"><span class="strong"><strong>$ tree -v example</strong></span></code></pre></div><p>I get a tree representation of the contents of the <code class="literal">ch1/example</code> folder, which holds the code for the examples of this chapter. Here's what the structure of a really simple application could look like:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="1"><span class="strong"><strong>example</strong></span>
<span class="strong"><strong>├── core.py</strong></span>
<span class="strong"><strong>├── run.py</strong></span>
<span class="strong"><strong>└── util</strong></span>
<span class="strong"><strong>    ├── __init__.py</strong></span>
<span class="strong"><strong>    ├── db.py</strong></span>
<span class="strong"><strong>    ├── math.py</strong></span>
<span class="strong"><strong>    └── network.py</strong></span></code></pre></div><p>You can see that within the root of this example, we have two modules, <code class="literal">core.py</code> and <code class="literal">run.py</code>, and one package: <code class="literal">util</code>. Within <code class="literal">core.py</code>, there may be the core logic of our application. On the other hand, within the <code class="literal">run.py</code> module, we can probably find the logic to start the application. Within the <code class="literal">util</code> package, I expect to find various utility tools, and in fact, we can guess that the modules there are named based on the types of tools they hold: <code class="literal">db.py</code> would hold tools to work with databases, <code class="literal">math.py</code> would, of course, hold <span>mathematical</span><a class="indexterm" id="id326346732"></a> tools (maybe our application deals with financial data), and <code class="literal">network.py</code> would probably hold tools to send/receive data on networks.</p><p>As explained before, the <code class="literal">__init__.py</code> file is there just to tell Python that <code class="literal">util</code> is a package and not just a mere folder.</p><p>Had this software been organized within modules only, it would have been harder to infer its structure. I put a <span class="emphasis"><em>module only</em></span> example under the <code class="literal">ch1/files_only</code> folder; see it for yourself:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="2"><span class="strong"><strong>$ tree -v files_only</strong></span></code></pre></div><p>This shows us a completely different picture:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="3"><span class="strong"><strong>files_only/
├── core.py
├── db.py
├── math.py
├── network.py
└── run.py</strong></span></code></pre></div><p>It is a little harder to guess what each module does, right? Now, consider that this is just a simple example, so you can guess how much harder it would be to understand a real application if we couldn't organize the code in packages and modules.</p><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="ch01lvl2sec19"></a>How do we use modules and packages?</h3></div></div></div><p>When a developer is writing an application, it is likely that they will need to apply the same piece of logic in different parts of it. For example, when writing a parser for the data that comes from a form that a user can fill in a web page, the application will have to validate <span>whether</span><a class="indexterm" id="id326402626"></a> a certain field is holding a number or not. Regardless of how the logic for this kind of validation is written, it's likely that it will be needed in more than one place.</p><p>For example, in a poll application, where the user is asked many questions, it's likely that several of them will require a numeric answer. For example:</p><div class="itemizedlist"><ul type="bullet"><li style="list-style-type: disc">What is your age?</li><li style="list-style-type: disc">How many pets do you own?</li><li style="list-style-type: disc">How many children do you have?</li><li style="list-style-type: disc">How many times have you been married?</li></ul></div><p>It would be very bad practice to copy/paste (or, more properly said: duplicate) the validation logic in every place where we expect a numeric answer. This would violate the <span class="strong"><strong>don't repeat yourself</strong></span> (<span class="strong"><strong>DRY</strong></span>) principle, <span>which</span><a class="indexterm" id="id326639088"></a> states that you should never repeat the same piece of code more than once in your application. I feel the need to stress the importance of this principle: <span class="emphasis"><em>you should never repeat the same piece of code more than once in your application</em></span> (pun intended).</p><p>There are several reasons why repeating the same piece of logic can be very bad, the most important ones being:</p><div class="itemizedlist"><ul type="bullet"><li style="list-style-type: disc">There could be a bug in the logic, and therefore, you would have to correct it in every place that the logic is applied.</li><li style="list-style-type: disc">You may want to amend the way you carry out the validation, and again you would have to change it in every place it is applied.</li><li style="list-style-type: disc">You may forget to fix/amend a piece of logic because you missed it when searching for all its occurrences. This would leave wrong/inconsistent behavior in your application.</li><li style="list-style-type: disc">Your code would be longer than needed, for no good reason.</li></ul></div><p>Python is a wonderful language and provides you with all the tools you need to apply all the coding best practices. For this particular example, we need to be able to reuse a piece of code. To be able to reuse a piece of code, we need to have a construct that will hold the code for us so that we can call that construct every time we need to repeat the logic inside it. That <span>construct</span><a class="indexterm" id="id326639117"></a> exists, and it's called a <span class="strong"><strong>function</strong></span>.</p><p>I'm not going too deep into the specifics here, so please just remember that a function is a block of organized, reusable code that is used to perform a task. Functions can assume many forms and names, according to what kind of environment they belong to, but for now this is not important. We'll see the details when we are able to appreciate them, later on, in the book. Functions are the building blocks of modularity in your application, and they are almost indispensable. Unless you're writing a super-simple script, you'll use functions all the time. We'll explore functions in <a class="link" href="https://subscription.packtpub.com/book/application_development/9781788996662/4" linkend="ch04"><span>Chapter 4</span></a>, <span class="emphasis"><em>Functions, the Building Blocks of Code</em></span>.</p><p>Python comes with a very extensive library, as I have already said a few <span>pages</span><a class="indexterm" id="id326648103"></a> ago. Now, maybe it's a good time to define what a <span>library</span><a class="indexterm" id="id326648115"></a> is: a <span class="strong"><strong>library</strong></span> is a collection of functions and objects that provide functionalities that enrich the abilities of a language.</p><p>For example, within Python's <code class="literal">math</code> library, we can find a plethora of functions, one of which is the <code class="literal">factorial</code> function, which of course calculates the factorial of a number.</p><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title"><a id="note11"></a>Note</h3><p>In mathematics, the <span class="strong"><strong>factorial</strong></span> of a non-negative integer number <span class="emphasis"><em>N</em></span>, denoted as <span class="emphasis"><em>N!</em></span>, is defined as the product of all positive integers less than or equal to <span class="emphasis"><em>N</em></span>. For example, the factorial of <code class="literal">5</code> is calculated as:<code class="literal">5! = 5 * 4 * 3 * 2 * 1 = 120</code>
The factorial of <code class="literal">0</code> is <code class="literal">0! = 1</code>, to respect the convention for an empty product.</p></div><p>So, if you wanted to use this function in your code, all you would have to do is to import it and call it with the right input values. Don't worry too much if input values and the concept of calling is not very clear for now; please just concentrate on the import part. We use a library by importing what we need from it, and then we use it.</p><p>In Python, to calculate the factorial of number <code class="literal">5</code>, we just need the following code:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="4"><span class="strong"><strong>&gt;&gt;&gt; from math import factorial
&gt;&gt;&gt; factorial(5)
120</strong></span></code></pre></div><div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title"><a id="note12"></a>Note</h3><p>Whatever we type in the shell, if it has a printable representation, will be printed on the console for us (in this case, the result of the function call: <code class="literal">120</code>).</p></div><p>So, let's go back to our example, the one with <code class="literal">core.py</code>, <code class="literal">run.py</code>, <code class="literal">util</code>, and so on.</p><p>In our example, the package <code class="literal">util</code> is our utility library. Our custom utility belt that holds all those reusable tools (that is, functions), which we need in our application. Some of them will deal with databases (<code class="literal">db.py</code>), some with the network (<code class="literal">network.py</code>), and some will perform mathematical calculations (<code class="literal">math.py</code>) that are outside the scope of Python's standard <code class="literal">math</code> library and, therefore, we have to code them for ourselves.</p><p>We will see in detail how to import functions and use them in their dedicated chapter. Let's now talk about another very important concept: <span class="emphasis"><em>Python's execution model</em></span>.</p></div></div></div>
<div class="ng-hide" ng-show="!productController.entitled &amp;&amp; productController.isTruncatedContent">
<div class="fade-out" ng-show="productController.productType === 'book'">
</div>
</div>
<div class="ng-hide" ng-show="!productController.entitled &amp;&amp; productController.productType === 'video'">

</div>
</div>
<div class="video-wrapper ng-hide" ng-show="productController.productType === 'video' &amp;&amp; productController.entitled">

<div class="transcript panel panel-default ng-hide" id="transcript" ng-show="productController.hasCaptions"></div>
</div>


</div>






<div class="row ns">
<hr/>
</div>
</div>

</div>
</div>
</div>
</div>
</div>
</div>


<script src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/app.dfc913a7d3f9c785692c.bundle.js" type="text/javascript"></script>
<iframe id="_hjRemoteVarsFrame" name="_hjRemoteVarsFrame" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/box-90f3a29ef7448451db5af955688970d7.html" style="display: none !important; width: 1px !important; height: 1px !important; opacity: 0 !important; pointer-events: none !important;" title="_hjRemoteVarsFrame"></iframe><div></div><script id="" type="text/javascript">window.heap=window.heap||[];
heap.load=function(e,d){window.heap.appid=e;window.heap.config=d=d||{};var a=d.forceSSL||"https:"===document.location.protocol,b=document.createElement("script");b.type="text/javascript";b.async=!0;b.src=(a?"https:":"http:")+"//cdn.heapanalytics.com/js/heap-"+e+".js";a=document.getElementsByTagName("script")[0];a.parentNode.insertBefore(b,a);b=function(a){return function(){heap.push([a].concat(Array.prototype.slice.call(arguments,0)))}};a="addEventProperties addUserProperties clearEventProperties identify removeEventProperty setEventProperties track unsetEventProperty".split(" ");for(var c=
0;c<a.length;c++)heap[a[c]]=b(a[c])};window.heap.appid||heap.load("34805961");</script><script id="" type="text/javascript">var HeapUserId="undefined";"string"===typeof HeapUserId&&"undefined"!==HeapUserId&&window.heap.identify(HeapUserId);</script>
<script id="" type="text/javascript">!function(b,e,f,g,a,c,d){b.fbq||(a=b.fbq=function(){a.callMethod?a.callMethod.apply(a,arguments):a.queue.push(arguments)},b._fbq||(b._fbq=a),a.push=a,a.loaded=!0,a.version="2.0",a.queue=[],c=e.createElement(f),c.async=!0,c.src=g,d=e.getElementsByTagName(f)[0],d.parentNode.insertBefore(c,d))}(window,document,"script","//connect.facebook.net/en_US/fbevents.js");fbq("init","445429252334850");fbq("track","PageView");</script>

<script id="" type="text/javascript">window.dataLayer=window.dataLayer||[];window.dataLayer.push({pageLoaded:"pageLoaded"});</script><script id="" type="text/javascript">(function(a,e,f,g,b,c,d){a.ProfitWellObject=b;a[b]=a[b]||function(){(a[b].q=a[b].q||[]).push(arguments)};a[b].l=1*new Date;c=e.createElement(f);d=e.getElementsByTagName(f)[0];c.async=1;c.src=g;d.parentNode.insertBefore(c,d)})(window,document,"script","https://dna8twue3dlxq.cloudfront.net/js/profitwell.js","profitwell");profitwell("auth_token","8c79afc46264fdacbbb5c7bfc3b4800f");profitwell("user_email","");</script><iframe aria-hidden="true" id="intercom-frame" src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/saved_resource.html" style="position: absolute !important; opacity: 0 !important; width: 1px !important; height: 1px !important; top: 0 !important; left: 0 !important; border: none !important; display: block !important; z-index: -1 !important;" tabindex="-1"></iframe><script src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/adsct" type="text/javascript"></script><div id="intercom-css-container"><style data-emotion="intercom-global"></style><style data-emotion="intercom"></style></div><script id="" type="text/javascript">window.heap=window.heap||[];
heap.load=function(e,d){window.heap.appid=e;window.heap.config=d=d||{};var a=d.forceSSL||"https:"===document.location.protocol,b=document.createElement("script");b.type="text/javascript";b.async=!0;b.src=(a?"https:":"http:")+"//cdn.heapanalytics.com/js/heap-"+e+".js";a=document.getElementsByTagName("script")[0];a.parentNode.insertBefore(b,a);b=function(a){return function(){heap.push([a].concat(Array.prototype.slice.call(arguments,0)))}};a="addEventProperties addUserProperties clearEventProperties identify removeEventProperty setEventProperties track unsetEventProperty".split(" ");for(var c=
0;c<a.length;c++)heap[a[c]]=b(a[c])};window.heap.appid||heap.load("34805961");</script><script id="" type="text/javascript">var HeapUserId="72f2212e-37fa-4f9e-80a7-7aeb3cbd99b3";"string"===typeof HeapUserId&&"undefined"!==HeapUserId&&window.heap.identify(HeapUserId);</script>
<script id="" type="text/javascript">!function(b,e,f,g,a,c,d){b.fbq||(a=b.fbq=function(){a.callMethod?a.callMethod.apply(a,arguments):a.queue.push(arguments)},b._fbq||(b._fbq=a),a.push=a,a.loaded=!0,a.version="2.0",a.queue=[],c=e.createElement(f),c.async=!0,c.src=g,d=e.getElementsByTagName(f)[0],d.parentNode.insertBefore(c,d))}(window,document,"script","//connect.facebook.net/en_US/fbevents.js");fbq("init","445429252334850");fbq("track","PageView");</script>

<script id="" type="text/javascript">(function(c,d,e,f,g,a,b){c[e]=c[e]||[];a=d.createElement(f);a.async=1;a.src=g;b=d.getElementsByTagName(f)[0];b.parentNode.insertBefore(a,b)})(window,document,"_gscq","script","//widgets.getsitecontrol.com/95715/script.js");</script><script src="./9781788996662:1:ch01lvl1sec18:how-is-python-code-organized:How is Python code organized_ - Learn Python Programming - Second Edition_files/adsct" type="text/javascript"></script></body></html>