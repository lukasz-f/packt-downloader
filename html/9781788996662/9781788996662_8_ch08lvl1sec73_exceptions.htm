<!DOCTYPE html>
<html class="ng-scope" lang="en" ng-app="PacktUnlimited" ng-strict-di=""><head class="ng-scope" ng-controller="metadataController as metadataController"><meta content="text/html; charset=utf-8" http-equiv="Content-Type"/><style class="vjs-styles-defaults">
      .video-js {
        width: 300px;
        height: 150px;
      }

      .vjs-fluid {
        padding-top: 56.25%
      }
    </style><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>
<title class="ng-binding" ng-bind-html="metadataController.pageTitle">Exceptions - Learn Python Programming - Second Edition</title>
<link href="https://d3ginfw2u4xn7p.cloudfront.net/c825bf9a03a944639d91ecb1f0010fc4/images/favicon.ico" rel="shortcut icon" type="image/x-icon"/>
<meta content="CGEyu7dKgqkqBrxdainq9bY0WowOCMOdZ1nKVzzvYJg" name="google-site-verification"/>
<meta content="index,follow" name="robots"/>
<link href="https://fonts.googleapis.com/" rel="dns-prefetch"/>
<link href="https://maxcdn.bootstrapcdn.com/" rel="dns-prefetch"/>
<link href="https://cdn.polyfill.io/" rel="dns-prefetch"/>
<meta content="!" name="fragment"/>
<link href="https://subscription.packtpub.com/book/application_development/9781788996662/8/ch08lvl1sec73/exceptions" ng-href="https://subscription.packtpub.com/book/application_development/9781788996662/8/ch08lvl1sec73/exceptions" rel="canonical"/>
<meta content="Even though I haven't formally introduced them to you, by now I expect you to at least have a vague idea of what an exception is." name="description"/>
<meta content="#212121" name="theme-color"/>
<meta class="ng-scope" content="book" ng-if="metadataController.productType" property="og:type"/>
<meta content="Exceptions - Learn Python Programming - Second Edition" property="og:title"/>
<meta content="Even though I haven't formally introduced them to you, by now I expect you to at least have a vague idea of what an exception is." property="og:description"/>
<meta content="https://subscription.packtpub.com/book/application_development/9781788996662/8/ch08lvl1sec73/exceptions" property="og:url"/>
<meta content="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" property="og:image"/>
<meta content="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" property="og:image:secure_url"/>
<link href="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" ng-href="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" rel="image_src"/>
<meta class="ng-scope" content="Fabrizio Romano" name="book:author" ng-if="metadataController.productType &amp;&amp; metadataController.authorListString"/>
<meta class="ng-scope" content="9781788996662" name="book:isbn" ng-if="metadataController.productType &amp;&amp; metadataController.isbn"/>
<meta class="ng-scope" content="2018-06-29T06:10:00.000Z" name="book:release_date" ng-if="metadataController.productType &amp;&amp; metadataController.releaseDate"/>
<meta class="ng-scope" content="https://packtpub.com/" name="book:publisher" ng-if="metadataController.productType"/>
<meta content="Exceptions - Learn Python Programming - Second Edition" name="twitter:title"/>
<meta content="Even though I haven't formally introduced them to you, by now I expect you to at least have a vague idea of what an exception is." name="twitter:description"/>
<meta content="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" name="twitter:image"/>
<meta content="summary" name="twitter:card"/>
<meta content="@packtpub" name="twitter:site"/>
<meta content="@packtpub" name="twitter:creator"/>
<meta content="width=device-width, initial-scale=1" name="viewport"/>
<base href="."/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-57x57.png" rel="apple-touch-icon" sizes="57x57"/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-72x72.png" rel="apple-touch-icon" sizes="72x72"/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-114x114.png" rel="apple-touch-icon" sizes="114x114"/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-144x144.png" rel="apple-touch-icon" sizes="144x144"/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-180x180.png" rel="apple-touch-icon" sizes="180x180"/>
<link crossorigin="anonymous" href="./9781788996662_8_ch08lvl1sec73_exceptions_files/font-awesome.min.css" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" rel="stylesheet"/>
<link href="./9781788996662_8_ch08lvl1sec73_exceptions_files/css" rel="stylesheet" type="text/css"/>
<script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/script.js"></script><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/f.txt" type="text/javascript"></script><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/profitwell.js"></script><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/inferredEvents.js"></script><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/445429252334850"></script><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/fbevents.js"></script><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/f.txt" type="text/javascript"></script><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/uwt.js" type="text/javascript"></script><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/analytics.js" type="text/javascript"></script><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/e8mdsr07" type="text/javascript"></script><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/heap-34805961.js" type="text/javascript"></script><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/hotjar-982604.js" type="text/javascript"></script><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/recaptcha__pl.js" type="text/javascript"></script><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/gtm.js"></script><script src="./9781788996662_8_ch08lvl1sec73_exceptions_files/polyfill.min.js"></script>
<script async="" defer="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/api.js"></script>
<script async="" defer="" ng-src="https://static.zuora.com/Resources/libs/hosted/1.3.0/zuora-min.js" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/zuora-min.js"></script>
<script>
            //Set your APP_ID
            var APP_ID = 'e8mdsr07'; // to come from wpConfig

            (function(){var w=window;var ic=w.Intercom;if(typeof ic==="function"){ic('reattach_activator');ic('update',w.intercomSettings);}else{var d=document;var i=function(){i.c(arguments);};i.q=[];i.c=function(args){i.q.push(args);};w.Intercom=i;var l=function(){var s=d.createElement('script');s.type='text/javascript';s.async=true;s.src='https://widget.intercom.io/widget/' + APP_ID;var x=d.getElementsByTagName('script')[0];x.parentNode.insertBefore(s,x);};if(w.attachEvent){w.attachEvent('onload',l);}else{w.addEventListener('load',l,false);}}})();

        </script>
<script async="" charset="utf-8" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/modules.bb88fc9b50ded24ae044.js"></script><style id="mm_style_mm_cdApiStyleId_1" media="screen" type="text/css"></style><style type="text/css">iframe#_hjRemoteVarsFrame {display: none !important; width: 1px !important; height: 1px !important; opacity: 0 !important; pointer-events: none !important;}</style><script async="" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/hotjar-982604(1).js"></script><style></style><script src="./9781788996662_8_ch08lvl1sec73_exceptions_files/f(1).txt"></script><script src="./9781788996662_8_ch08lvl1sec73_exceptions_files/f(2).txt"></script><script id="schema" type="application/ld+json">{
	"@context": "https://schema.org",
	"@type": "book",
	"author": [
		"Fabrizio Romano"
	],
	"datePublished": "2018-06-29T06:10:00.000Z",
	"image": "https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png",
	"name": "Exceptions - Learn Python Programming - Second Edition",
	"publisher": {
		"@type": "Organization",
		"name": "Packt",
		"logo": {
			"@type": "ImageObject",
			"url": "https://d3ginfw2u4xn7p.cloudfront.net/c825bf9a03a944639d91ecb1f0010fc4/images/white-packt.png"
		}
	},
	"isPartOf": "/book/application_development/9781788996662",
	"description": "Even though I haven't formally introduced them to you, by now I expect you to at least have a vague idea of what an exception is.",
	"isbn": "9781788996662",
	"bookFormat": "https://schema.org/EBook"
}</script></head><body class="prototype-nav home-body" ng-class="{
    'cover-background': currentPage === 'login' ||
        currentPage === 'create-account' ||
        currentPage === 'password-reset',
    'checkout': currentPage === 'checkout',
    'has-footer': currentPage !== 'login' &amp;&amp;
        currentPage !== 'create-account' &amp;&amp;
        currentPage !== 'password-reset' &amp;&amp;
        currentPage !== 'product',
    'has-bottom-pagination': currentPage === 'saved' ||
        currentPage === 'bookmarks' ||
        currentPage === 'purchases' ||
        currentPage === 'history',
    
    'sidebar-open': showSideBarOverlay,
    'home-body': currentPage != 'create-account' || !freeWeekend,
    'free-weekend': currentPage === 'create-account' &amp;&amp; freeWeekend,
     }"><prerender-ready class="ng-isolate-scope">
<script>
    window.prerenderReady = false;
</script>
</prerender-ready>
<script>
                window.dataLayer = window.dataLayer || [];
                (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
                new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
                j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
                'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
                })(window,document,'script','dataLayer','GTM-WJMM825');
            </script>
<script src="./9781788996662_8_ch08lvl1sec73_exceptions_files/mmapi.js" type="text/javascript"></script><script id="" type="text/javascript">window.dataLayer=window.dataLayer||[];window.dataLayer.push({originalLocation:document.location.protocol+"//"+document.location.hostname+document.location.pathname+document.location.search});</script><script id="" type="text/javascript">Element.prototype.matches||(Element.prototype.matches=Element.prototype.matchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector||Element.prototype.oMatchesSelector||Element.prototype.webkitMatchesSelector||function(a){a=(this.document||this.ownerDocument).querySelectorAll(a);for(var b=a.length;0<=--b&&a.item(b)!==this;);return-1<b});</script>
<script id="" type="text/javascript">hj("tagRecording",[google_tag_manager["GTM-WJMM825"].macro(4)]);</script><script id="mmpack.0" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/mmpackage-1.12.js" type="text/javascript"></script>

<script src="./9781788996662_8_ch08lvl1sec73_exceptions_files/cookieconsent.min.js" type="text/javascript"></script>

<link href="./9781788996662_8_ch08lvl1sec73_exceptions_files/app.104d50d2c3a3114104d18ba8a565ba3d.bundle.css" rel="stylesheet"/>


<sidebar-overlay class="ng-isolate-scope" show="showSideBarOverlay"></sidebar-overlay>
<div class="page">
<div class="alertbox" id="alertbox"></div>
<div autoscroll="true" class="ng-scope" ng-view="" style="height:100%;">




<div class="book-page-wrapper ng-scope">
<div class="container book-page">

<div class="clearfix"></div>



<div class="container-fluid" id="book-wrapper">
<div class="ng-scope" ng-include="productController.contentView" onload="productController.onFinishLoadContent()"><div class="col-sm-12 ng-scope reader-container" id="reader-content" ng-class="{'reader-container': productController.productType === 'book'}" ng-show="productController.isContentAvailable" on-finish-page-render="productController.applyFontSize()">
<div class="row">
<div class="book-content" style="position:relative;">
<div class="ng-binding" ng-bind-html="productController.content"><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="ch08lvl1sec73"></a>Exceptions</h2></div></div><hr/></div><p>Even though I haven't formally <span>introduced</span><a class="indexterm" id="id326643516"></a> them to you, by now I expect you to at least have a vague idea of what an exception is. In the previous chapters, we've seen that when an iterator is exhausted, calling <code class="literal">next</code> on it raises a <code class="literal">StopIteration</code> exception. We met <code class="literal">IndexError</code> when we tried accessing a list at a position that was outside the valid range. We also met <code class="literal">AttributeError</code> when we tried accessing an attribute on an object that didn't have it, and <code class="literal">KeyError</code> when we did the same with a key and a dictionary.</p><p>Now the time has come for us to talk about exceptions.</p><p>Sometimes, even though an operation or a piece of code is correct, there are conditions in which something may go wrong. For example, if we're converting user input from <code class="literal">string</code> to <code class="literal">int</code>, the user could accidentally type a letter in place of a digit, making it impossible for us to convert that value into a number. When dividing numbers, we may not know in advance whether we're attempting a division by zero. When opening a file, it could be missing or corrupted.</p><p>When an error is detected during execution, it is called an <span class="strong"><strong>exception</strong></span>. Exceptions are not necessarily lethal; in fact, we've seen that <code class="literal">StopIteration</code> is deeply integrated in the Python generator and iterator mechanisms. Normally, though, if you don't take the necessary precautions, an exception will cause your application to break. Sometimes, this is the desired behavior, but in other cases, we want to prevent and control problems such as these. For example, we may alert the user that the file they're trying to open is corrupted or that it is missing so that they can either fix it or provide another file, without the need for the application to die because of this issue. Let's see an example of a few exceptions:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="0"><span class="strong"><strong># exceptions/first.example.py</strong></span>
<span class="strong"><strong>&gt;&gt;&gt; gen = (n for n in range(2))</strong></span>
<span class="strong"><strong>&gt;&gt;&gt; next(gen)</strong></span>
<span class="strong"><strong>0</strong></span>
<span class="strong"><strong>&gt;&gt;&gt; next(gen)</strong></span>
<span class="strong"><strong>1</strong></span>
<span class="strong"><strong>&gt;&gt;&gt; next(gen)</strong></span>
<span class="strong"><strong>Traceback (most recent call last):</strong></span>
<span class="strong"><strong>  File "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stdin</span><span class="token punctuation">&gt;</span></span>", line 1, in <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span></strong><span class="token tag"><span class="token punctuation"></span></span></span><span class="token tag"><span class="token punctuation"></span></span>
<span class="strong"><strong>StopIteration</strong></span>
<span class="strong"><strong>&gt;&gt;&gt; print(undefined_name)</strong></span>
<span class="strong"><strong>Traceback (most recent call last):</strong></span>
<span class="strong"><strong>  File "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stdin</span><span class="token punctuation">&gt;</span></span>", line 1, in <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span></strong><span class="token tag"><span class="token punctuation"></span></span></span><span class="token tag"><span class="token punctuation"></span></span>
<span class="strong"><strong>NameError: name 'undefined_name' is not defined</strong></span>
<span class="strong"><strong>&gt;&gt;&gt; mylist = [1, 2, 3]</strong></span>
<span class="strong"><strong>&gt;&gt;&gt; mylist[5]</strong></span>
<span class="strong"><strong>Traceback (most recent call last):</strong></span>
<span class="strong"><strong>  File "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stdin</span><span class="token punctuation">&gt;</span></span>", line 1, in <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span></strong><span class="token tag"><span class="token punctuation"></span></span></span><span class="token tag"><span class="token punctuation"></span></span>
<span class="strong"><strong>IndexError: list index out of range</strong></span>
<span class="strong"><strong>&gt;&gt;&gt; mydict = {'a': 'A', 'b': 'B'}</strong></span>
<span class="strong"><strong>&gt;&gt;&gt; mydict['c']</strong></span>
<span class="strong"><strong>Traceback (most recent call last):</strong></span>
<span class="strong"><strong>  File "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stdin</span><span class="token punctuation">&gt;</span></span>", line 1, in <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span></strong><span class="token tag"><span class="token punctuation"></span></span></span><span class="token tag"><span class="token punctuation"></span></span>
<span class="strong"><strong>KeyError: 'c'</strong></span>
<span class="strong"><strong>&gt;&gt;&gt; 1 / 0</strong></span>
<span class="strong"><strong>Traceback (most recent call last):</strong></span>
<span class="strong"><strong>  File "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stdin</span><span class="token punctuation">&gt;</span></span>", line 1, in <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span></strong><span class="token tag"><span class="token punctuation"></span></span></span><span class="token tag"><span class="token punctuation"></span></span>
<span class="strong"><strong>ZeroDivisionError: division by zero</strong></span></code></pre></div><p>As you can see, the Python shell is quite forgiving. We can see <code class="literal">Traceback</code>, so that we have information about the error, but the program doesn't die. This is a special behavior, a regular program or a script would normally die if nothing were done to handle exceptions.</p><p>To handle an exception, Python gives you the <code class="literal">try</code> statement. When <span>you</span><a class="indexterm" id="id326270971"></a> enter the <code class="literal">try</code> clause, Python will watch out for one or more different types of exceptions (according to how you instruct it), and if they are raised, it will allow you to react. The <code class="literal">try</code> statement is composed of the <code class="literal">try</code> clause, which opens the statement, one or more <code class="literal">except</code> clauses (all optional) that define what to do when an exception is caught, an <code class="literal">else</code> clause (optional), which is executed when the <code class="literal">try</code> clause is exited without any exception raised, and a <code class="literal">finally</code> clause (optional), whose code is executed regardless of whatever happened in the other clauses. The <code class="literal">finally</code> clause is typically used to clean up resources (we saw this in <a class="link" href="https://subscription.packtpub.com/book/application_development/9781788996662/7" linkend="ch07">Chapter 7</a>, <span class="emphasis"><em>Files and Data Persistence</em></span>, when we were opening files without using a context manager).</p><p>Mind the order—it's important. Also, <code class="literal">try</code> must be followed by at least one <code class="literal">except</code> clause or a <code class="literal">finally</code> clause. Let's see an example:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="1"># exceptions/try.syntax.py
def try_syntax(numerator, denominator):
    try:
        print(f'In the try block: {numerator}/{denominator}')
        result = numerator / denominator
    except ZeroDivisionError as zde:
        print(zde)
    else:
        print('The result is:', result)
        return result
    finally:
        print('Exiting')

print(try_syntax(12, 4))
print(try_syntax(11, 0))</code></pre></div><p>The preceding example defines a simple <code class="literal">try_syntax</code> function. We perform the division of two numbers. We are prepared to catch a <code class="literal">ZeroDivisionError</code> exception if we call the function with <code class="literal">denominator = 0</code>. Initially, the code enters the <code class="literal">try</code> block. If <code class="literal">denominator</code> is not <code class="literal">0</code>, <code class="literal">result</code> is calculated and the execution, after leaving the <code class="literal">try</code> block, resumes in the <code class="literal">else</code> block. We print <code class="literal">result</code> and return it. Take a look at the output and you'll notice that just before returning <code class="literal">result</code>, which is the exit point of the function, Python executes the <code class="literal">finally</code> clause.</p><p>When <code class="literal">denominator</code> is <code class="literal">0</code>, things change. We enter the <code class="literal">except</code> block and print <code class="literal">zde</code>. The <code class="literal">else</code> block isn't executed because an exception was raised in the <code class="literal">try</code> block. Before (implicitly) returning <code class="literal">None</code>, we still execute the <code class="literal">finally</code> block. Take a look at the output and see whether it makes sense to you:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="2"><span class="strong"><strong>$ python try.syntax.py</strong></span>
<span class="strong"><strong>In the try block: 12/4     # try</strong></span>
<span class="strong"><strong>The result is: 3.0         # else</strong></span>
<span class="strong"><strong>Exiting                    # finally</strong></span>
<span class="strong"><strong>3.0                        # return within else</strong></span>

<span class="strong"><strong>In the try block: 11/0     # try</strong></span>
<span class="strong"><strong>division by zero           # except</strong></span>
<span class="strong"><strong>Exiting                    # finally</strong></span>
<span class="strong"><strong>None                       # implicit return end of function</strong></span></code></pre></div><p>When you execute a <code class="literal">try</code> block, you may want to catch more than one exception. For example, when trying to decode a JSON object, you may incur into <code class="literal">ValueError</code> for malformed JSON, or <code class="literal">TypeError</code> if the type of the data you're feeding to <code class="literal">json.loads()</code> is not a string. In this case, you may structure your code like this:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="3"># exceptions/json.example.py
import json
json_data = '{}'

try:
    data = json.loads(json_data)
except (ValueError, TypeError) as e:
    print(type(e), e)</code></pre></div><p>This code will catch both <code class="literal">ValueError</code> and <code class="literal">TypeError</code>. Try changing <code class="literal">json_data = '{}'</code> to <code class="literal">json_data = 2</code> or <code class="literal">json_data = '{{'</code>, and you'll see the different output.</p><p>If you want to handle multiple exceptions differently, you can just add more <code class="literal">except</code> clauses, like this:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="4"># exceptions/multiple.except.py
try:
    # some code
except Exception1:
    # react to Exception1
except (Exception2, Exception3):
    # react to Exception2 or Exception3
except Exception4:
    # react to Exception4
...</code></pre></div><p>Keep in mind that an exception is handled in the first block that defines that exception class or any of its bases. Therefore, when you stack multiple <code class="literal">except</code> clauses like we've just done, make sure that you put specific exceptions at the top and generic ones at the bottom. In OOP terms, children on top, grandparents at the bottom. Moreover, remember that only one <code class="literal">except</code> handler is executed when an exception is raised.</p><p>You can also write <span class="strong"><strong>custom exceptions</strong></span>. To do that, you just have to inherit from any other exception class. Python's built-in exceptions are too many to be listed here, so I have to point you to the official documentation. One important thing to know is that every Python exception derives from <code class="literal">BaseException</code>, but your custom exceptions should never inherit directly from it. The reason is because handling <span>such</span><a class="indexterm" id="id326402638"></a> an exception will also trap <span class="strong"><strong>system-exiting exceptions</strong></span>, such as <code class="literal">SystemExit</code> and <code class="literal">KeyboardInterrupt</code>, which <span>derive</span><a class="indexterm" id="id326643520"></a> from <code class="literal">BaseException</code>, and this could lead to severe issues. In the case of disaster, you want to be able to <span class="emphasis"><em>Ctrl</em></span> + <span class="emphasis"><em>C</em></span> your way out of an application.</p><p>You can easily solve the problem by inheriting from <code class="literal">Exception</code>, which inherits from <code class="literal">BaseException</code> but doesn't include any system-exiting exception in its children because they are <span>siblings</span><a class="indexterm" id="id326643544"></a> in the built-in exceptions hierarchy (see <a class="ulink" href="https://docs.python.org/3/library/exceptions.html#exception-hierarchy" target="_blank"><span>https://docs.python.org/3/library/exceptions.html#exception-hierarchy</span></a>).</p><p>Programming with exceptions can be very tricky. You could inadvertently silence out errors, or trap exceptions that aren't meant to be handled. Play it safe by keeping in mind a few guidelines: always put in the <code class="literal">try</code> clause only the code that may cause the exception(s) that you want to handle. When you write <code class="literal">except</code> clauses, be as specific as you can, don't just resort to <code class="literal">except Exception</code> because it's easy. Use tests to make sure your code handles edge cases in a way that requires the least possible amount of exception handling. Writing an <code class="literal">except</code> statement without specifying any exception would catch any exception, therefore exposing your code to the same risks you incur when you derive your custom exceptions from <code class="literal">BaseException</code>.</p><p>You will find information about exceptions almost everywhere on the web. Some coders use them abundantly, others sparingly. Find your own way of dealing with them by taking examples from other people's source code. There are plenty of interesting open source projects on <span>websites</span><a class="indexterm" id="id326644536"></a> such as GitHub (<a class="ulink" href="https://github.com/" target="_blank"><span>https://github.com</span></a>) and <span>Bitbucket</span><a class="indexterm" id="id326644553"></a> (<a class="ulink" href="https://bitbucket.org/" target="_blank"><span>https://bitbucket.org/</span></a>).</p><p>Before we talk about profiling, let me show you an unconventional use of exceptions, just to give you something to help you expand your views on them. They are not just simply errors:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="5"># exceptions/for.loop.py
n = 100
found = False
for a in range(n):
    if found: break
    for b in range(n):
        if found: break
        for c in range(n):
            if 42 * a + 17 * b + c == 5096:
                found = True
                print(a, b, c)  # 79 99 95</code></pre></div><p>The preceding code is quite a common idiom if you deal with numbers. You have to iterate over a few nested ranges and look for a particular combination of <code class="literal">a</code>, <code class="literal">b</code>, and <code class="literal">c</code> that satisfies a condition. In the example, condition is a trivial linear equation, but imagine something much cooler than that. What bugs me is having to check whether the solution has been found at the beginning of each loop, in order to break out of them as fast as we can when it is. The breakout logic interferes with the rest of the code and I don't like it, so I came up with a different solution for this. Take a look at it, and see whether you can adapt it to other cases too:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="6"># exceptions/for.loop.py
class ExitLoopException(Exception):
    pass

try:
    n = 100
    for a in range(n):
        for b in range(n):
            for c in range(n):
                if 42 * a + 17 * b + c == 5096:
                    raise ExitLoopException(a, b, c)
except ExitLoopException as ele:
    print(ele)  # (79, 99, 95)</code></pre></div><p>Can you see how much more elegant it is? Now the breakout logic is entirely handled with a simple exception whose name even hints at its purpose. As soon as the result is found, we raise it, and immediately the control is given to the <code class="literal">except</code> clause that handles it. This is food for thought. This example indirectly shows you how to raise your own exceptions. Read up on the official documentation to dive into the beautiful details of this subject.</p><p>Moreover, if you are up for a challenge, you might want to try to make this last example into a context manager for nested <code class="literal">for</code> loops. Good luck!</p></div></div>
<div class="ng-hide" ng-show="!productController.entitled &amp;&amp; productController.isTruncatedContent">
<div class="fade-out" ng-show="productController.productType === 'book'">
</div>
</div>
<div class="ng-hide" ng-show="!productController.entitled &amp;&amp; productController.productType === 'video'">

</div>
</div>
<div class="video-wrapper ng-hide" ng-show="productController.productType === 'video' &amp;&amp; productController.entitled">

<div class="transcript panel panel-default ng-hide" id="transcript" ng-show="productController.hasCaptions"></div>
</div>


</div>






<div class="row ns">
<hr/>
</div>
</div>

</div>
</div>
</div>
</div>
</div>
</div>


<script src="./9781788996662_8_ch08lvl1sec73_exceptions_files/app.dfc913a7d3f9c785692c.bundle.js" type="text/javascript"></script>
<iframe id="_hjRemoteVarsFrame" name="_hjRemoteVarsFrame" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/box-90f3a29ef7448451db5af955688970d7.html" style="display: none !important; width: 1px !important; height: 1px !important; opacity: 0 !important; pointer-events: none !important;" title="_hjRemoteVarsFrame"></iframe><div></div><script id="" type="text/javascript">window.heap=window.heap||[];
heap.load=function(e,d){window.heap.appid=e;window.heap.config=d=d||{};var a=d.forceSSL||"https:"===document.location.protocol,b=document.createElement("script");b.type="text/javascript";b.async=!0;b.src=(a?"https:":"http:")+"//cdn.heapanalytics.com/js/heap-"+e+".js";a=document.getElementsByTagName("script")[0];a.parentNode.insertBefore(b,a);b=function(a){return function(){heap.push([a].concat(Array.prototype.slice.call(arguments,0)))}};a="addEventProperties addUserProperties clearEventProperties identify removeEventProperty setEventProperties track unsetEventProperty".split(" ");for(var c=
0;c<a.length;c++)heap[a[c]]=b(a[c])};window.heap.appid||heap.load("34805961");</script><script id="" type="text/javascript">var HeapUserId="undefined";"string"===typeof HeapUserId&&"undefined"!==HeapUserId&&window.heap.identify(HeapUserId);</script>
<script id="" type="text/javascript">!function(b,e,f,g,a,c,d){b.fbq||(a=b.fbq=function(){a.callMethod?a.callMethod.apply(a,arguments):a.queue.push(arguments)},b._fbq||(b._fbq=a),a.push=a,a.loaded=!0,a.version="2.0",a.queue=[],c=e.createElement(f),c.async=!0,c.src=g,d=e.getElementsByTagName(f)[0],d.parentNode.insertBefore(c,d))}(window,document,"script","//connect.facebook.net/en_US/fbevents.js");fbq("init","445429252334850");fbq("track","PageView");</script>

<script id="" type="text/javascript">window.dataLayer=window.dataLayer||[];window.dataLayer.push({pageLoaded:"pageLoaded"});</script><script id="" type="text/javascript">(function(a,e,f,g,b,c,d){a.ProfitWellObject=b;a[b]=a[b]||function(){(a[b].q=a[b].q||[]).push(arguments)};a[b].l=1*new Date;c=e.createElement(f);d=e.getElementsByTagName(f)[0];c.async=1;c.src=g;d.parentNode.insertBefore(c,d)})(window,document,"script","https://dna8twue3dlxq.cloudfront.net/js/profitwell.js","profitwell");profitwell("auth_token","8c79afc46264fdacbbb5c7bfc3b4800f");profitwell("user_email","");</script><iframe aria-hidden="true" id="intercom-frame" src="./9781788996662_8_ch08lvl1sec73_exceptions_files/saved_resource.html" style="position: absolute !important; opacity: 0 !important; width: 1px !important; height: 1px !important; top: 0 !important; left: 0 !important; border: none !important; display: block !important; z-index: -1 !important;" tabindex="-1"></iframe><div id="intercom-css-container"><style data-emotion="intercom-global"></style><style data-emotion="intercom"></style></div><script src="./9781788996662_8_ch08lvl1sec73_exceptions_files/adsct" type="text/javascript"></script><script id="" type="text/javascript">window.heap=window.heap||[];
heap.load=function(e,d){window.heap.appid=e;window.heap.config=d=d||{};var a=d.forceSSL||"https:"===document.location.protocol,b=document.createElement("script");b.type="text/javascript";b.async=!0;b.src=(a?"https:":"http:")+"//cdn.heapanalytics.com/js/heap-"+e+".js";a=document.getElementsByTagName("script")[0];a.parentNode.insertBefore(b,a);b=function(a){return function(){heap.push([a].concat(Array.prototype.slice.call(arguments,0)))}};a="addEventProperties addUserProperties clearEventProperties identify removeEventProperty setEventProperties track unsetEventProperty".split(" ");for(var c=
0;c<a.length;c++)heap[a[c]]=b(a[c])};window.heap.appid||heap.load("34805961");</script><script id="" type="text/javascript">var HeapUserId="72f2212e-37fa-4f9e-80a7-7aeb3cbd99b3";"string"===typeof HeapUserId&&"undefined"!==HeapUserId&&window.heap.identify(HeapUserId);</script>
<script id="" type="text/javascript">!function(b,e,f,g,a,c,d){b.fbq||(a=b.fbq=function(){a.callMethod?a.callMethod.apply(a,arguments):a.queue.push(arguments)},b._fbq||(b._fbq=a),a.push=a,a.loaded=!0,a.version="2.0",a.queue=[],c=e.createElement(f),c.async=!0,c.src=g,d=e.getElementsByTagName(f)[0],d.parentNode.insertBefore(c,d))}(window,document,"script","//connect.facebook.net/en_US/fbevents.js");fbq("init","445429252334850");fbq("track","PageView");</script>

<script id="" type="text/javascript">(function(c,d,e,f,g,a,b){c[e]=c[e]||[];a=d.createElement(f);a.async=1;a.src=g;b=d.getElementsByTagName(f)[0];b.parentNode.insertBefore(a,b)})(window,document,"_gscq","script","//widgets.getsitecontrol.com/95715/script.js");</script><script src="./9781788996662_8_ch08lvl1sec73_exceptions_files/adsct" type="text/javascript"></script></body></html>