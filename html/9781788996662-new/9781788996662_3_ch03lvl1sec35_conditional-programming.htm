<!DOCTYPE html>
<html class="ng-scope" lang="en" ng-app="PacktUnlimited" ng-strict-di=""><head class="ng-scope" ng-controller="metadataController as metadataController"><meta content="text/html; charset=utf-8" http-equiv="Content-Type"/><style class="vjs-styles-defaults">
      .video-js {
        width: 300px;
        height: 150px;
      }

      .vjs-fluid {
        padding-top: 56.25%
      }
    </style><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>
<title class="ng-binding" ng-bind-html="metadataController.pageTitle">Conditional programming - Learn Python Programming - Second Edition</title>
<link href="https://d3ginfw2u4xn7p.cloudfront.net/c825bf9a03a944639d91ecb1f0010fc4/images/favicon.ico" rel="shortcut icon" type="image/x-icon"/>
<meta content="CGEyu7dKgqkqBrxdainq9bY0WowOCMOdZ1nKVzzvYJg" name="google-site-verification"/>
<meta content="index,follow" name="robots"/>
<link href="https://fonts.googleapis.com/" rel="dns-prefetch"/>
<link href="https://maxcdn.bootstrapcdn.com/" rel="dns-prefetch"/>
<link href="https://cdn.polyfill.io/" rel="dns-prefetch"/>
<meta content="!" name="fragment"/>
<link href="https://subscription.packtpub.com/book/application_development/9781788996662/3/ch03lvl1sec35/conditional-programming" ng-href="https://subscription.packtpub.com/book/application_development/9781788996662/3/ch03lvl1sec35/conditional-programming" rel="canonical"/>
<meta content="Conditional programming, or branching, is something you do every day, every moment." name="description"/>
<meta content="#212121" name="theme-color"/>
<meta class="ng-scope" content="book" ng-if="metadataController.productType" property="og:type"/>
<meta content="Conditional programming - Learn Python Programming - Second Edition" property="og:title"/>
<meta content="Conditional programming, or branching, is something you do every day, every moment." property="og:description"/>
<meta content="https://subscription.packtpub.com/book/application_development/9781788996662/3/ch03lvl1sec35/conditional-programming" property="og:url"/>
<meta content="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" property="og:image"/>
<meta content="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" property="og:image:secure_url"/>
<link href="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" ng-href="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" rel="image_src"/>
<meta class="ng-scope" content="Fabrizio Romano" name="book:author" ng-if="metadataController.productType &amp;&amp; metadataController.authorListString"/>
<meta class="ng-scope" content="9781788996662" name="book:isbn" ng-if="metadataController.productType &amp;&amp; metadataController.isbn"/>
<meta class="ng-scope" content="2018-06-29T06:10:00.000Z" name="book:release_date" ng-if="metadataController.productType &amp;&amp; metadataController.releaseDate"/>
<meta class="ng-scope" content="https://packtpub.com/" name="book:publisher" ng-if="metadataController.productType"/>
<meta content="Conditional programming - Learn Python Programming - Second Edition" name="twitter:title"/>
<meta content="Conditional programming, or branching, is something you do every day, every moment." name="twitter:description"/>
<meta content="https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png" name="twitter:image"/>
<meta content="summary" name="twitter:card"/>
<meta content="@packtpub" name="twitter:site"/>
<meta content="@packtpub" name="twitter:creator"/>
<meta content="width=device-width, initial-scale=1" name="viewport"/>
<base href="."/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-57x57.png" rel="apple-touch-icon" sizes="57x57"/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-72x72.png" rel="apple-touch-icon" sizes="72x72"/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-114x114.png" rel="apple-touch-icon" sizes="114x114"/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-144x144.png" rel="apple-touch-icon" sizes="144x144"/>
<link href="https://subscription.packtpub.com/images/apple-icons/apple-icon-180x180.png" rel="apple-touch-icon" sizes="180x180"/>
<link crossorigin="anonymous" href="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/font-awesome.min.css" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" rel="stylesheet"/>
<link href="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/css" rel="stylesheet" type="text/css"/>
<script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/script.js"></script><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/f.txt" type="text/javascript"></script><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/profitwell.js"></script><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/inferredEvents.js"></script><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/445429252334850"></script><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/fbevents.js"></script><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/f.txt" type="text/javascript"></script><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/uwt.js" type="text/javascript"></script><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/analytics.js" type="text/javascript"></script><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/e8mdsr07" type="text/javascript"></script><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/heap-34805961.js" type="text/javascript"></script><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/hotjar-982604.js" type="text/javascript"></script><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/recaptcha__pl.js" type="text/javascript"></script><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/gtm.js"></script><script src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/polyfill.min.js"></script>
<script async="" defer="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/api.js"></script>
<script async="" defer="" ng-src="https://static.zuora.com/Resources/libs/hosted/1.3.0/zuora-min.js" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/zuora-min.js"></script>
<script>
            //Set your APP_ID
            var APP_ID = 'e8mdsr07'; // to come from wpConfig

            (function(){var w=window;var ic=w.Intercom;if(typeof ic==="function"){ic('reattach_activator');ic('update',w.intercomSettings);}else{var d=document;var i=function(){i.c(arguments);};i.q=[];i.c=function(args){i.q.push(args);};w.Intercom=i;var l=function(){var s=d.createElement('script');s.type='text/javascript';s.async=true;s.src='https://widget.intercom.io/widget/' + APP_ID;var x=d.getElementsByTagName('script')[0];x.parentNode.insertBefore(s,x);};if(w.attachEvent){w.attachEvent('onload',l);}else{w.addEventListener('load',l,false);}}})();

        </script>
<script async="" charset="utf-8" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/modules.bb88fc9b50ded24ae044.js"></script><style id="mm_style_mm_cdApiStyleId_1" media="screen" type="text/css"></style><style type="text/css">iframe#_hjRemoteVarsFrame {display: none !important; width: 1px !important; height: 1px !important; opacity: 0 !important; pointer-events: none !important;}</style><script async="" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/hotjar-982604(1).js"></script><style></style><script src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/f(1).txt"></script><script src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/f(2).txt"></script><script id="schema" type="application/ld+json">{
	"@context": "https://schema.org",
	"@type": "book",
	"author": [
		"Fabrizio Romano"
	],
	"datePublished": "2018-06-29T06:10:00.000Z",
	"image": "https://d255esdrn735hr.cloudfront.net/sites/default/files/B10074_Ned_coccover.png",
	"name": "Conditional programming - Learn Python Programming - Second Edition",
	"publisher": {
		"@type": "Organization",
		"name": "Packt",
		"logo": {
			"@type": "ImageObject",
			"url": "https://d3ginfw2u4xn7p.cloudfront.net/c825bf9a03a944639d91ecb1f0010fc4/images/white-packt.png"
		}
	},
	"isPartOf": "/book/application_development/9781788996662",
	"description": "Conditional programming, or branching, is something you do every day, every moment.",
	"isbn": "9781788996662",
	"bookFormat": "https://schema.org/EBook"
}</script></head><body class="prototype-nav home-body" ng-class="{
    'cover-background': currentPage === 'login' ||
        currentPage === 'create-account' ||
        currentPage === 'password-reset',
    'checkout': currentPage === 'checkout',
    'has-footer': currentPage !== 'login' &amp;&amp;
        currentPage !== 'create-account' &amp;&amp;
        currentPage !== 'password-reset' &amp;&amp;
        currentPage !== 'product',
    'has-bottom-pagination': currentPage === 'saved' ||
        currentPage === 'bookmarks' ||
        currentPage === 'purchases' ||
        currentPage === 'history',
    
    'sidebar-open': showSideBarOverlay,
    'home-body': currentPage != 'create-account' || !freeWeekend,
    'free-weekend': currentPage === 'create-account' &amp;&amp; freeWeekend,
     }"><prerender-ready class="ng-isolate-scope">
<script>
    window.prerenderReady = false;
</script>
</prerender-ready>
<script>
                window.dataLayer = window.dataLayer || [];
                (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
                new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
                j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
                'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
                })(window,document,'script','dataLayer','GTM-WJMM825');
            </script>
<script src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/mmapi.js" type="text/javascript"></script><script id="" type="text/javascript">window.dataLayer=window.dataLayer||[];window.dataLayer.push({originalLocation:document.location.protocol+"//"+document.location.hostname+document.location.pathname+document.location.search});</script><script id="" type="text/javascript">Element.prototype.matches||(Element.prototype.matches=Element.prototype.matchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector||Element.prototype.oMatchesSelector||Element.prototype.webkitMatchesSelector||function(a){a=(this.document||this.ownerDocument).querySelectorAll(a);for(var b=a.length;0<=--b&&a.item(b)!==this;);return-1<b});</script>
<script id="" type="text/javascript">hj("tagRecording",[google_tag_manager["GTM-WJMM825"].macro(4)]);</script><script id="mmpack.0" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/mmpackage-1.12.js" type="text/javascript"></script>

<script src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/cookieconsent.min.js" type="text/javascript"></script>

<link href="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/app.104d50d2c3a3114104d18ba8a565ba3d.bundle.css" rel="stylesheet"/>


<sidebar-overlay class="ng-isolate-scope" show="showSideBarOverlay"></sidebar-overlay>
<div class="page">
<div class="alertbox" id="alertbox"></div>
<div autoscroll="true" class="ng-scope" ng-view="" style="height:100%;">




<div class="book-page-wrapper ng-scope">
<div class="container book-page">

<div class="clearfix"></div>



<div class="container-fluid" id="book-wrapper">
<div class="ng-scope" ng-include="productController.contentView" onload="productController.onFinishLoadContent()"><div class="col-sm-12 ng-scope reader-container" id="reader-content" ng-class="{'reader-container': productController.productType === 'book'}" ng-show="productController.isContentAvailable" on-finish-page-render="productController.applyFontSize()">
<div class="row">
<div class="book-content" style="position:relative;">
<div class="ng-binding" ng-bind-html="productController.content"><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="ch03lvl1sec35"></a>Conditional programming</h2></div></div><hr/></div><p>Conditional programming, or branching, is <span>something</span><a class="indexterm" id="id326507111"></a> you do every day, <span>every</span><a class="indexterm" id="id326507409"></a> moment. It's about evaluating conditions: <span class="emphasis"><em>if the light is green, then I can cross;</em></span> <span class="emphasis"><em>if it's raining, then I'm taking the umbrella;</em></span> and <span class="emphasis"><em>if I'm late for work, then I'll call my manager</em></span>.</p><p>The main tool is the <code class="literal">if</code> statement, which comes in different forms and colors, but basically it evaluates an expression and, based on the result, chooses which part of the code to execute. As usual, let's look at an example:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="0"># conditional.1.py
late = True 
if late: 
    print('I need to call my manager!') </code></pre></div><p>This is possibly the simplest example: when fed to the <code class="literal">if</code> statement, <code class="literal">late</code> acts as a conditional expression, which is evaluated in a Boolean context (exactly like if we were calling <code class="literal">bool(late)</code>). If the result of the evaluation is <code class="literal">True</code>, then we enter the body of the code immediately after the <code class="literal">if</code> statement. Notice that the <code class="literal">print</code> instruction is indented: this means it belongs to a scope defined by the <code class="literal">if</code> clause. Execution of this code yields:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="1"><span class="strong"><strong>$ python conditional.1.py</strong></span><span class="strong"><strong>I need to call my manager!</strong></span></code></pre></div><p>Since <code class="literal">late</code> is <code class="literal">True</code>, the <code class="literal">print</code> statement was executed. Let's expand on this example:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="2"># conditional.2.py
late = False 
if late: 
    print('I need to call my manager!')  #1 
else: 
    print('no need to call my manager...')  #2 </code></pre></div><p>This time I set <code class="literal">late = False</code>, so when I execute the code, the result is different:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="3"><span class="strong"><strong>$ python conditional.2.py</strong></span><span class="strong"><strong>no need to call my manager...</strong></span></code></pre></div><p>Depending on the result of <span>evaluating</span><a class="indexterm" id="id326402369"></a> the <code class="literal">late</code> expression, we can either enter block <code class="literal">#1</code> or block <code class="literal">#2</code>, <span class="emphasis"><em>but not both</em></span>. Block <code class="literal">#1</code> is executed when <code class="literal">late</code> evaluates to <code class="literal">True</code>, while block <code class="literal">#2</code> is executed when <code class="literal">late</code> evaluates to <code class="literal">False</code>. Try assigning <code class="literal">False</code>/<code class="literal">True</code> values to the <code class="literal">late</code> name, and see how the output for this code changes accordingly.</p><p>The preceding example also introduces the <code class="literal">else</code> clause, which becomes very handy when we want to provide an alternative set of instructions to be executed when an expression evaluates to <code class="literal">False</code> within an <code class="literal">if</code> clause. The else clause is optional, as is evident by comparing the preceding two examples.</p><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="ch03lvl2sec39"></a>A specialized else – elif</h3></div></div></div><p>Sometimes all you need is to do <span>something</span><a class="indexterm" id="id326417873"></a> if a condition is met (a simple <code class="literal">if</code> clause). At other times, you need to provide an alternative, in case the condition is <code class="literal">False</code> (<code class="literal">if</code>/<code class="literal">else</code> clause), but there are situations where you may have more than two paths to choose from, so, since <span>calling</span><a class="indexterm" id="id326417894"></a> the manager (or not calling them) is kind of a binary type of example (either you call or you don't), let's change the type of example and keep expanding. This time, we decide on tax percentages. If my income is less than $10,000, I won't pay any taxes. If it is between $10,000 and $30,000, I'll pay 20% in taxes. If it is between $30,000 and $100,000, I'll pay 35% in taxes, and if it's over $100,000, I'll (gladly) pay 45% in taxes. Let's put this all down into beautiful Python code:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="4"># taxes.py
income = 15000 
if income &lt; 10000: 
    tax_coefficient = 0.0  #1 
elif income &lt; 30000: 
    tax_coefficient = 0.2  #2 
elif income &lt; 100000: 
    tax_coefficient = 0.35  #3 
else: 
    tax_coefficient = 0.45  #4 
 
print('I will pay:', income * tax_coefficient, 'in taxes') </code></pre></div><p>Executing the preceding code yields:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="5"><span class="strong"><strong>$ python taxes.py</strong></span><span class="strong"><strong>I will pay: 3000.0 in taxes</strong></span></code></pre></div><p>Let's go through the <span>example</span><a class="indexterm" id="id326504893"></a> line by line: we start by setting up the <span>income</span><a class="indexterm" id="id326504900"></a> value. In the example, my income is $15,000. We enter the <code class="literal">if</code> clause. Notice that this time we also introduced the <code class="literal">elif</code> clause, which is a contraction of <code class="literal">else-if</code>, and it's different from a bare <code class="literal">else</code> clause in that it also has its own condition. So, the <code class="literal">if</code> expression of <code class="literal">income &lt; 10000</code> evaluates to <code class="literal">False</code>, therefore block <code class="literal">#1</code> is not executed.</p><p>The control passes to the next condition evaluator: <code class="literal">elif income &lt; 30000</code>. This one evaluates to <code class="literal">True</code>, therefore block <code class="literal">#2</code> is executed, and because of this, Python then resumes execution after the whole <code class="literal">if</code>/<code class="literal">elif</code>/<code class="literal">elif</code>/<code class="literal">else</code> clause (which we can just call the <code class="literal">if</code> clause from now on). There is only one instruction after the <code class="literal">if</code> clause, the <code class="literal">print</code> call, which tells us I will pay <code class="literal">3000.0</code> in taxes this year (<span class="emphasis"><em>15,000 * 20%</em></span>). Notice that the order is mandatory: <code class="literal">if</code> comes first, then (optionally) as many <code class="literal">elif</code> clauses as you need, and then (optionally) an <code class="literal">else</code> clause.</p><p>Interesting, right? No matter how many lines of code you may have within each block, when one of the conditions evaluates to <code class="literal">True</code>, the associated block is executed and then execution resumes after the whole clause. If none of the conditions evaluates to <code class="literal">True</code> (for example, <code class="literal">income = 200000</code>), then the body of the <code class="literal">else</code> clause would be executed (block <code class="literal">#4</code>). This example expands our understanding of the behavior of the <code class="literal">else</code> clause. Its block of code is executed when none of the preceding <code class="literal">if</code>/<code class="literal">elif</code>/.../<code class="literal">elif</code> expressions has evaluated to <code class="literal">True</code>.</p><p>Try to modify the value of <code class="literal">income</code> until you can comfortably execute all blocks at will (one per execution, of course). And then try the <span class="strong"><strong>boundaries</strong></span>. This is crucial, whenever you have conditions expressed as <span class="strong"><strong>equalities</strong></span> or <span class="strong"><strong>inequalities</strong></span> (<code class="literal">==</code>, <code class="literal">!=</code>, <code class="literal">&lt;</code>, <code class="literal">&gt;</code>, <code class="literal">&lt;=</code>, <code class="literal">&gt;=</code>), those numbers represent boundaries. It is essential to test boundaries thoroughly. Should I allow you to drive at 18 or 17? Am I checking your age with <code class="literal">age &lt; 18</code>, or <code class="literal">age &lt;= 18</code>? You can't imagine how many times I've had to fix subtle bugs that stemmed from using the wrong operator, so go ahead and experiment with the preceding code. Change some <code class="literal">&lt;</code> to <code class="literal">&lt;=</code> and set income to be one of the boundary values (10,000, 30,000, 100,000) as well as any value in between. See how the result changes, and get a good understanding of it before proceeding.</p><p>Let's now see another <span>example</span><a class="indexterm" id="id326507165"></a> that shows us how to nest <code class="literal">if</code> clauses. Say your <span>program</span><a class="indexterm" id="id326507175"></a> encounters an error. If the alert system is the console, we print the error. If the alert system is an email, we send it according to the severity of the error. If the alert system is anything other than console or email, we don't know what to do, therefore we do nothing. Let's put this into code:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="6"># errorsalert.py
alert_system = 'console'  # other value can be 'email' 
error_severity = 'critical'  # other values: 'medium' or 'low' 
error_message = 'OMG! Something terrible happened!' 
 
if alert_system == 'console': 
    print(error_message)  #1 
elif alert_system == 'email': 
    if error_severity == 'critical': 
        send_email('admin@example.com', error_message)  #2 
    elif error_severity == 'medium': 
        send_email('support.1@example.com', error_message)  #3 
    else: 
        send_email('support.2@example.com', error_message)  #4 </code></pre></div><p>The preceding example is quite interesting, because of its silliness. It shows us two nested <code class="literal">if</code> clauses (<span class="strong"><strong>outer</strong></span> and <span class="strong"><strong>inner</strong></span>). It also shows us that the outer <code class="literal">if</code> clause doesn't have any <code class="literal">else</code>, while the inner one does. Notice how indentation is what allows us to nest one clause within another one.</p><p>If <code class="literal">alert_system == 'console'</code>, body <code class="literal">#1</code> is executed, and nothing else happens. On the other hand, if <code class="literal">alert_system == 'email'</code>, then we enter into another <code class="literal">if</code> clause, which we called inner. In the inner <code class="literal">if</code> clause, according to <code class="literal">error_severity</code>, we send an email to either an admin, first-level support, or second-level support (blocks <code class="literal">#2</code>, <code class="literal">#3</code>, and <code class="literal">#4</code>). The <code class="literal">send_email</code> function is not defined in this example, therefore trying to run it would give you an error. In the source code of the book, which you can download from the website, I included a trick to redirect that call to a regular <code class="literal">print</code> function, just so you can experiment on the console without actually sending an email. Try changing the values and see how it all works.</p></div><div class="section" lang="en" xml:lang="en"><div class="titlepage"><div><div><h3 class="title"><a id="ch03lvl2sec40"></a>The ternary operator</h3></div></div></div><p>One last thing I would like to show you, <span>before</span><a class="indexterm" id="id326507360"></a> moving on to the <span>next</span><a class="indexterm" id="id326507366"></a> subject, is the <span class="strong"><strong>ternary operator</strong></span> or, in layman's terms, the short version of an <code class="literal">if</code>/<code class="literal">else</code> clause. When the value of a name is to be assigned according to some condition, sometimes it's easier and more readable to use the ternary operator instead of a proper <code class="literal">if</code> clause. In the following example, the two code blocks do exactly the same thing:</p><div class="informalexample"><pre class="programlisting language-markup"><code class=" language-markup" data-code-index="7"># ternary.py
order_total = 247  # GBP 
 
# classic if/else form 
if order_total &gt; 100: 
    discount = 25  # GBP 
else: 
    discount = 0  # GBP 
print(order_total, discount) 
 
# ternary operator 
discount = 25 if order_total &gt; 100 else 0 
print(order_total, discount) </code></pre></div><p>For simple cases like this, I find it very nice to be able to express that logic in one line instead of four. Remember, as a coder, you spend much more time reading code than writing it, so Python's conciseness is invaluable.</p><p>Are you clear on how the ternary operator works? Basically, <code class="literal">name = something if condition else something-else</code>. So <code class="literal">name</code> is assigned <code class="literal">something</code> if <code class="literal">condition</code> evaluates to <code class="literal">True</code>, and <code class="literal">something-else</code> if <code class="literal">condition</code> evaluates to <code class="literal">False</code>.</p><p>Now that you know everything about controlling the path of the code, let's move on to the next subject: <span class="emphasis"><em>looping</em></span>.</p></div></div></div>
<div class="ng-hide" ng-show="!productController.entitled &amp;&amp; productController.isTruncatedContent">
<div class="fade-out" ng-show="productController.productType === 'book'">
</div>
</div>
<div class="ng-hide" ng-show="!productController.entitled &amp;&amp; productController.productType === 'video'">

</div>
</div>
<div class="video-wrapper ng-hide" ng-show="productController.productType === 'video' &amp;&amp; productController.entitled">

<div class="transcript panel panel-default ng-hide" id="transcript" ng-show="productController.hasCaptions"></div>
</div>


</div>






<div class="row ns">
<hr/>
</div>
</div>

</div>
</div>
</div>
</div>
</div>
</div>


<script src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/app.dfc913a7d3f9c785692c.bundle.js" type="text/javascript"></script>
<iframe id="_hjRemoteVarsFrame" name="_hjRemoteVarsFrame" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/box-90f3a29ef7448451db5af955688970d7.html" style="display: none !important; width: 1px !important; height: 1px !important; opacity: 0 !important; pointer-events: none !important;" title="_hjRemoteVarsFrame"></iframe><script id="" type="text/javascript">window.heap=window.heap||[];
heap.load=function(e,d){window.heap.appid=e;window.heap.config=d=d||{};var a=d.forceSSL||"https:"===document.location.protocol,b=document.createElement("script");b.type="text/javascript";b.async=!0;b.src=(a?"https:":"http:")+"//cdn.heapanalytics.com/js/heap-"+e+".js";a=document.getElementsByTagName("script")[0];a.parentNode.insertBefore(b,a);b=function(a){return function(){heap.push([a].concat(Array.prototype.slice.call(arguments,0)))}};a="addEventProperties addUserProperties clearEventProperties identify removeEventProperty setEventProperties track unsetEventProperty".split(" ");for(var c=
0;c<a.length;c++)heap[a[c]]=b(a[c])};window.heap.appid||heap.load("34805961");</script><script id="" type="text/javascript">var HeapUserId="undefined";"string"===typeof HeapUserId&&"undefined"!==HeapUserId&&window.heap.identify(HeapUserId);</script>
<script id="" type="text/javascript">!function(b,e,f,g,a,c,d){b.fbq||(a=b.fbq=function(){a.callMethod?a.callMethod.apply(a,arguments):a.queue.push(arguments)},b._fbq||(b._fbq=a),a.push=a,a.loaded=!0,a.version="2.0",a.queue=[],c=e.createElement(f),c.async=!0,c.src=g,d=e.getElementsByTagName(f)[0],d.parentNode.insertBefore(c,d))}(window,document,"script","//connect.facebook.net/en_US/fbevents.js");fbq("init","445429252334850");fbq("track","PageView");</script>

<script id="" type="text/javascript">window.dataLayer=window.dataLayer||[];window.dataLayer.push({pageLoaded:"pageLoaded"});</script><script id="" type="text/javascript">(function(a,e,f,g,b,c,d){a.ProfitWellObject=b;a[b]=a[b]||function(){(a[b].q=a[b].q||[]).push(arguments)};a[b].l=1*new Date;c=e.createElement(f);d=e.getElementsByTagName(f)[0];c.async=1;c.src=g;d.parentNode.insertBefore(c,d)})(window,document,"script","https://dna8twue3dlxq.cloudfront.net/js/profitwell.js","profitwell");profitwell("auth_token","8c79afc46264fdacbbb5c7bfc3b4800f");profitwell("user_email","");</script><div></div><iframe aria-hidden="true" id="intercom-frame" src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/saved_resource.html" style="position: absolute !important; opacity: 0 !important; width: 1px !important; height: 1px !important; top: 0 !important; left: 0 !important; border: none !important; display: block !important; z-index: -1 !important;" tabindex="-1"></iframe><script src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/adsct" type="text/javascript"></script><div id="intercom-css-container"><style data-emotion="intercom-global"></style><style data-emotion="intercom"></style></div><script id="" type="text/javascript">window.heap=window.heap||[];
heap.load=function(e,d){window.heap.appid=e;window.heap.config=d=d||{};var a=d.forceSSL||"https:"===document.location.protocol,b=document.createElement("script");b.type="text/javascript";b.async=!0;b.src=(a?"https:":"http:")+"//cdn.heapanalytics.com/js/heap-"+e+".js";a=document.getElementsByTagName("script")[0];a.parentNode.insertBefore(b,a);b=function(a){return function(){heap.push([a].concat(Array.prototype.slice.call(arguments,0)))}};a="addEventProperties addUserProperties clearEventProperties identify removeEventProperty setEventProperties track unsetEventProperty".split(" ");for(var c=
0;c<a.length;c++)heap[a[c]]=b(a[c])};window.heap.appid||heap.load("34805961");</script><script id="" type="text/javascript">var HeapUserId="72f2212e-37fa-4f9e-80a7-7aeb3cbd99b3";"string"===typeof HeapUserId&&"undefined"!==HeapUserId&&window.heap.identify(HeapUserId);</script>
<script id="" type="text/javascript">!function(b,e,f,g,a,c,d){b.fbq||(a=b.fbq=function(){a.callMethod?a.callMethod.apply(a,arguments):a.queue.push(arguments)},b._fbq||(b._fbq=a),a.push=a,a.loaded=!0,a.version="2.0",a.queue=[],c=e.createElement(f),c.async=!0,c.src=g,d=e.getElementsByTagName(f)[0],d.parentNode.insertBefore(c,d))}(window,document,"script","//connect.facebook.net/en_US/fbevents.js");fbq("init","445429252334850");fbq("track","PageView");</script>

<script id="" type="text/javascript">(function(c,d,e,f,g,a,b){c[e]=c[e]||[];a=d.createElement(f);a.async=1;a.src=g;b=d.getElementsByTagName(f)[0];b.parentNode.insertBefore(a,b)})(window,document,"_gscq","script","//widgets.getsitecontrol.com/95715/script.js");</script><script src="./9781788996662_3_ch03lvl1sec35_conditional-programming_files/adsct" type="text/javascript"></script></body></html>